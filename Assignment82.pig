--use of concat

file = load 'television.txt' using PigStorage('|') as (company:chararray,product:chararray,size:int,state:chararray,pin:int,price:int);

file_gen = FOREACH file GENERATE CONCAT(company,'-',state);


--use of tokenize

file = load 'television.txt' using PigStorage('|') as (company:chararray,product:chararray,size:int,state:chararray,pin:int,price:int);

file_gen1 = FOREACH file GENERATE TOKENIZE(state,' ');

--use of sum (total price of all televison in the list grouped by brand )

file = load 'television.txt' using PigStorage('|') as (company:chararray,product:chararray,size:int,state:chararray,pin:int,price:int);

file_gen_   = GROUP file by company;
file_price =  FOREACH file_gen_sam GENERATE group,SUM(file.price);

--use of min (minimum price of among the televison in the list grouped by brand  )

file = load 'television.txt' using PigStorage('|') as (company:chararray,product:chararray,size:int,state:chararray,pin:int,price:int);

file_gen_       = GROUP file by company;
file_price_min  =  FOREACH file_gen_sam GENERATE group,MIN(file.price);

--use of max (minimum price of all televison in the list that grouped by brand  )

file = load 'television.txt' using PigStorage('|') as (company:chararray,product:chararray,size:int,state:chararray,pin:int,price:int);

file_gen_          = GROUP file by company;
file_price_max     =  FOREACH file_gen_sam GENERATE group,MAX(file.price);

--use of LIMIT (limiting the result of file_price_min AND displaying minmum price of two tv among all)

file = load 'television.txt' using PigStorage('|') as (company:chararray,product:chararray,size:int,state:chararray,pin:int,price:int);

lim = LIMIT file_price_min 2;
file_price_min  =  FOREACH file_gen_sam GENERATE group,MIN(file.price);


--use of Store (storing the result generated by the command in a file)

store lim INTO 'result' using PigStorage('*');

--use of Distinct(to display distinct sizes among the television)

file_gen_    = GROUP file by company;
res_distinct = DISTINCT file_gen_;

--use of Flatten(first generating a group which contain bag then using flatten extracting value from bag)

r1  = load 'abc.txt' using PigStorage(',') as (a:int,b:int);
r2  = group r1 by a ;
r3  = foreach r2 generate group as a , r1 as b;
r4  = foreach r3 generate  a,FLATTEN(BagToTuple(b.b));



--use of IsEmpty(filter where product name is empty)

file_isEmpty = file_gen = FILTER file BY IsEmpty(product);






